abs(); 
add(); 
append(); 
arccos(); 
arccosh(); 
arcsin(); 
arcsinh(); 
arctan(); 
arctanh(); 
around(); 
array(); 
array_split(); 
astype(); 
bar(); 
barh(); 
bellman_ford(); 
bool(); 
breadth_first_order(); 
choice(); 
clear(); 
__complex__(); 
complex(); 
concatenate(); 
connected_components(); 
ConvexHull(); 
copy(); 
corr(); 
cos(); 
cosh(); 
count_nonzero(); 
cumprod(); 
cumsum(); 
datetime(); 
Delaunay(); 
delete_many(); 
delete_one(); 
depth_first_order(); 
describe(); 
dict(); 
diff(); 
dir(); 
discard(); 
divide(); 
divmod(); 
drop(); 
drop_duplicates(); 
dropna(); 
dsplit(); 
dstack(); 
duplicated(); 
eliminate_zeros(); 
executemany(); 
extend(); 
fetchall(); 
fetchone(); 
fillna(); 
find(); 
findall(); 
find_one(); 
fit(); 
fix(); 
__float__(); 
float(); 
floor(); 
floyd_warshall(); 
format(); 
frompyfunc(); 
gcd(); 
get(); 
grid(); 
.group(); 
head(); 
hist(); 
hsplit(); 
hstack(); 
hypot(); 
info(); 
__init__(); 
input(); 
insert(); 
insert_many(); 
insert_one(); 
int(); 
interp1d(); 
interp_func(); 
intersect1d(); 
intersection(); 
intersection_update(); 
isinstance(); 
items(); 
__iter__(); 
iter(); 
json.dumps(); 
json.loads(); 
KDTree(); 
keys(); 
lcm(); 
legend(); 
len(); 
limit(); 
LinearRegression(); 
list(); 
loadmat(); 
log(); 
log10(); 
log2(); 
lower(); 
map(); 
math.abs(); 
math.ceil(); 
math.floor(); 
math.log(); 
math.sqrt(); 
max(); 
mean(); 
median(); 
min(); 
minimize(); 
mod(); 
mode(); 
multiply(); 
mydb.commit(); 
myfunc(); 
ndenumerate(); 
nditer(); 
__next__(); 
normaltest(); 
numpy.random.normal(); 
open(); 
os.remove(); 
os.rmdir(); 
percentile(); 
permutation(); 
pie(); 
plot(); 
plt.colorbar(); 
plt.plot(); 
pop(); 
popitem(); 
power(); 
print(); 
prod(); 
query(); 
r2_score(); 
rand(); 
randint(); 
random(); 
random.normal(); 
range(); 
raw_input(); 
Rbf(); 
read(); 
readline(); 
reduce(); 
remainder(); 
remove(); 
replace(); 
reverse(); 
savemat(); 
scatter(); 
scipy.optimize.minimize(); 
scipy.sparse.csr_matrix(); 
search(); 
searchsorted(); 
setdiff1d(); 
setxor1d(); 
shuffle(); 
sin(); 
sinh(); 
sort(); 
.span(); 
split(); 
stack(); 
StandardScaler(); 
std(); 
strftime(); 
strip(); 
sub(); 
subplots(); 
subtract(); 
sum_duplicates(); 
super(); give access to methods and properties of a parent or sibling class
suptitle(; add a title to the figure
symmetric_difference(); returns a set that contains all items from {both sets}^, but not the items that are present in both sets
symmetric_difference_update(; update the original set by removing items that are present in {both sets}^, and inserting the other items
tail(; return a specified^ number of last rows
tan(; return the tangent of 
tanh(; return the hyperbolic tangent of
title(); return a string where the first character in every word is upper case
tocsc(; convert compressed sparse row to collumn
to_datetime(; converted to date/time format
to_string(); converted to string
trunc(; returns the truncated integer part of
ttest_ind(; take two samples of same size and produces a tuple of t-statistic^ and p-value^
type(; return the type of
union(; return a set that contains all items from the {original set}^, and all items from {the specified set(s)}^
union1d(; find the unique values of {two arrays}^
unique(; find the unique elements of
UnivariateSpline(; interpolates through {a piecewise polynomial}^
update(; insert to the dictionary
update_many(); update multiple mongoDB records or documents
update_one(); update one mongoDB record or document
upper(); convert to upper case
values(); return view object containing elements of an array
var(; Compute the variance of array elements along the axis
vsplit(; split the 2-D array into three 2-D arrays along collumns
vstack(; stack along columns [better explanation needed]
where(; return the indices of elements in an input array 
xlabel(; set a label for x-axis
ylabel(; set a label for y-axis
zip(; return a zip object
