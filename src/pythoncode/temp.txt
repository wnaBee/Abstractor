format() method takes unlimited number of arguments, and ar
list() Constructor</h2>
 
 <p>It is also possible to use 
list() Constructor</h2>
 
 <p>It is also possible to use 
complex()</code> methods:</p>
 
 <div class="w3-example">
 
float()</code>, and <code class="w3-codespan">complex()</
int()</code>, 
 <code class="w3-codespan">float()</code
random()</code> function to 
 make a random number, but Py
len()</code> function.</p>
 <div class="w3-example">
 <
len()</code> function returns the length of a string:</
print()</code> function:</p>
 
 <div class="w3-example">
len()</code> function.</p>
 <div class="w3-example">
 <
len()</code> function returns the length of a string:</
print()</code> function:</p>
 
 <div class="w3-example">
lower()</code> method returns the string in lower case:</
replace()</code> method replaces a string with another stri
split()</code> method returns a list where the text betwe
split()</code> method splits the string into substrings i
strip()</code> method removes any whitespace from the beg
format()</code> method!</p>
 
 <p>The <code class="w3-code
format()</code> method takes the passed arguments, 
 forma
format()</code> method to insert numbers 
 into strings:</
bool()</code> function allows you to evaluate 
 any valu
isinstance()</code> 
 function, which can be used to determine
list()</code> constructor to make a List:</p>
 <div clas
list()</code> constructor to make a List:</p>
 <div clas
insert()</code> method.</p>
 
 <p>The <code class="w3-code
insert()</code> method inserts an item at the specified in
append()</code> method to append an item:</p>
 <div class=
extend()</code> method.</p>
 
 <div class="w3-example">
 <
extend()</code> method does not have to append
 <em>lists<
insert()</code> method.</p>
 
 <p>The <code class="w3-code
insert()</code> method inserts an item at the specified in
clear()</code> method empties the list.</p>
 
 <p>The lis
pop()</code> method removes the specified 
 index.</p>
pop()</code> method removes the last item.</p>
 
 <div 
remove()</code> method removes the specified item.</p>
 
 
len()</code> functions to create a suitable iterable.</
len()</code> function to determine the length of the li
range()</code> and
 <code class="w3-codespan">len()</code
range()</code> function to create an iterable:</p>
 <div 
reverse()</code> method reverses the current sorting order 
sort()</code> method is case sensitive,
 resulting in al
copy()</code> method:</p>
 <div class="w3-code notransla
list()</code>.</p>
 
 <div class="w3-example">
 <h3>Exam
list()</code> method:</p>
 <div class="w3-code notransla
extend()</code> 
 method, 
 which purpose is to add elemen
extend()</code> method to add list2 at the end of list1:</
append()</code> method, but 
 there are other ways to add 
len()</code> functions to create a suitable iterable.</
len()</code> function to determine the length of the tu
range()</code> and <code class="w3-codespan">len()</code>
len()</code> method.</p>
 
 <div class="w3-example">
 <
len()</code> method.</p>
 
 <div class="w3-example">
 <
add()</code> 
 method.</p>
 
 <div class="w3-example">
add()</code> 
 method:</p>
 <div class="w3-code notrans
clear()</code> 
 method empties the set:</p>
 <div class=
discard()</code> method.</p>
 
 <div class="w3-example">
 <
discard()</code> 
 method:</p>
 <div class="w3-code notrans
discard()</code> will 
 <strong>NOT</strong> raise an error
pop()</code> method to remove 
 an item, but this metho
pop()</code> method is the 
 removed item.</p>
 
 <div 
pop()</code> 
 method:</p>
 <div class="w3-code notrans
pop()</code> method, 
 you do not know which item that 
remove()</code>, or the <code class="w3-codespan">discard(
remove()</code> 
 method:</p>
 <div class="w3-code notrans
remove()</code> will raise an error.</p>
 </div>
 
 <div c
intersection()</code> method will return a <em>new</em> set, tha
intersection_update()</code> method will keep only the items that are p
get()</code> that will give you the same result:</p>
 
items()</code> method will return each item in a dictiona
keys()</code> method will return a list of all the keys 
clear()</code> method empties the 
 dictionary:</p>
 <div
pop()</code> method removes the item with the specified
popitem()</code> method removes the last 
 inserted item (i
items()</code> method:</p>
 <div class="w3-code notransla
keys()</code> method to 
 return the keys of a dictionar
copy()</code> method:</p>
 <div class="w3-code notransla
dict()</code>.</p>
 
 <div class="w3-example">
 <h3>Exam
dict()</code> 
 function:</p>
 <div class="w3-code notra
append()</code> method to add an element to an array.</p>
len()</code> method to return the length of 
 an array 
pop()</code> method to remove an element from the array
remove()</code> method to remove an element from the array
remove()</code> method 
 only removes the first occurrence
__init__()</code> function is called automatically every tim
__init__()</code> function to the child class (instead of th
__init__()</code> function is called automatically every tim
__init__()</code> function to the
 <code class="w3-codespan"
__init__()</code> function, the child class will no longer i
__init__()</code> function.</p>
 <div class="w3-panel w3-not
__init__()</code> 
 function <strong>overrides</strong> the 
__init__()</code> 
 function, add a call to the 
 parent's <
__init__()</code> function:</p>
 
 <div class="w3-example">
__init__()</code> function.</p>
 
 <hr>
 
 <h2>Use the super
__init__()</code>, which allows you to do some 
 initializin
__iter__()</code> 
 and <code class="w3-codespan">__next__()
__iter__()</code> and <code class="w3-codespan">
 __next__()
__iter__()</code> method acts similar, you can 
 do operatio
iter()</code> method which is used to get an iterator:</
__next__()</code>.</p>
 <hr>
 
 <h2>Iterator vs Iterable</h2
__next__()</code> method also allows you to do 
 operations,
__next__()</code> method, we can add a terminating condition
dir()</code> function:</p>
 
 <div class="w3-example">
datetime()</code> class (constructor) of the
 <code class="w
datetime()</code> class requires three parameters to create 
datetime()</code> class also takes parameters for time and t
strftime()</code>, and takes one parameter, 
 <code class="w
abs()</code> function returns the absolute (positive) v
math.ceil()</code> method rounds a number upwards to 
 its ne
math.floor()</code> 
 method rounds a number downwards to its 
math.sqrt()</code> method for example, returns the square roo
max()</code> functions can be used to find the lowest o
min()</code> and <code class="w3-codespan">max()</code>
json.dumps()</code> method.</p>
 
 <div class="w3-example">
 <
json.dumps()</code> method has parameters to 
 make it easier 
json.dumps()</code> method has parameters to 
 order the keys 
json.loads()</code> method.</p>
 
 <div class="w3-panel w3-not
findall()</code> function returns a list containing all mat
.group()</code> returns the part of the string where there
search()</code> function searches the string 
 for a match
.span()</code> returns a tuple containing the start-, and
split()</code> function returns a list where 
 the string
sub()</code> function replaces the matches with 
 the t
input()</code> method. </p>
 <p>Python 2.7 uses the <code
input()</code> function, and continues 
 when the user ha
raw_input()</code> method. </p>
 <p>The following example ask
format()</code> method.</p>
 
 <hr>
 
 <h2>String format()
format()</code> method allows you to format selected parts
format()</code> method:</p>
 
 <div class="w3-example">
 <
open()</code> function.</p>
 <p>The <code class="w3-code
open()</code> function takes two parameters;
 <em>filena
open()</code> function.</p>
 <p>The <code class="w3-code
open()</code> function returns a file object, which has 
read()</code> method for reading the content of the file
read()</code> method returns the whole text, but you can
readline()</code> method:</p>
 
 <div class="w3-example">
 <
readline()</code> two times, you can read the 
 two first li
open()</code> function:</p>
 <p><code class="w3-codespan
open()</code> method, 
 with one of the following parame
os.remove()</code> function:</p>
 <div class="w3-example">
 <
os.rmdir()</code> method:</p>
 <div class="w3-example">
 <h3
array()</code> function.</p>
 
 <div class="w3-example">
array()</code> 
 method, and it will be converted into an
array()</code> function to create arrays, this function c
astype()</code> method.</p>
 <p>The <code class="w3-codesp
astype()</code> function creates a copy of the 
 array, an
ndenumerate()</code> method can be used for those usecases.</p>
nditer()</code> is a helping function that can be used fro
nditer()</code> we pass <code class="w3-codespan">flags=['
concatenate()</code> function, along with the axis. If axis is 
dstack()</code> 
 to stack along height, which is the same
hstack()</code> 
 to stack along rows.</p>
 
 <div class="
stack()</code> method along with the axis. If axis is not
array_split()</code> for splitting arrays, we pass it the array
array_split()</code> worked properly but 
 <code class="w3-code
array_split()</code> method is an array containing each of the 
array_split()</code> method, pass in the array 
 you want to sp
dsplit()</code>.</p>
 </div>
 
 <hr>
 
 
 <div class="w3-c
dstack()</code> are available as 
 <code class="w3-codespa
hsplit()</code> opposite of 
 <code class="w3-codespan">hs
hsplit()</code> method to split the 2-D array into three 2
hstack()</code></p>
 
 <div class="w3-example">
 <h3>Examp
split()</code> available but it will not adjust the eleme
split()</code> would fail.</p>
 </div>
 
 <hr>
 
 <h2>Spl
searchsorted()</code> which performs a binary search in the arra
searchsorted()</code> method is assumed to be 
 used on sorted a
sort()</code>, 
 that will sort a specified array.</p>
 
choice()</code> method allows you to generate a random val
choice()</code> method takes an array as a 
 parameter and
choice()</code> method also allows you to return an <em>ar
rand()</code> method returns a random float between 0 an
rand()</code> method also allows you to specify 
 the sh
randint()</code> method takes a <code class="w3-codespan">s
choice()</code> method allows you to generate a random val
choice()</code> method takes an array as a 
 parameter and
choice()</code> method also allows you to return an <em>ar
rand()</code> method returns a random float between 0 an
rand()</code> method also allows you to specify 
 the sh
randint()</code> method takes a <code class="w3-codespan">s
choice()</code> method of the 
 <code class="w3-codespan">
choice()</code> method allows us to specify the probabilit
permutation()</code>.</p>
 
 <hr>
 
 <h2>Shuffling Arrays</h2>
permutation()</code> method <em>returns</em> a re-arranged arra
shuffle()</code> and <code class="w3-codespan">permutation(
shuffle()</code> method makes changes to the original array
random.normal()</code> method to get a Normal Data Distribution.<
add()</code> function:</p>
 <div class="w3-code notrans
add()</code> function:</p>
 <div class="w3-code notrans
frompyfunc()</code> method.</p>
 
 <p>The <code class="w3-code
frompyfunc()</code> method takes the following arguments:</p>
abs()</code> functions
 functions do the same absolute 
add()</code> function sums the content of two arrays, a
divide()</code> function divides the values from one array
divmod()</code> function
 return both the quotient and the
math.abs()</code></p>
 
 <div class="w3-example">
 <h3>Examp
mod()</code> and the <code class="w3-codespan">remainde
multiply()</code> function multiplies the values from one ar
power()</code> function rises the values from the first a
remainder()</code> functions
 return the remainder of the val
remainder()</code> function:</p>
 <div class="w3-example">
 <
subtract()</code> function subtracts the values from one arr
around()</code> function increments preceding digit or dec
fix()</code> functions.</p>
 
 <div class="w3-example">
fix()</code>:</p>
 <div class="w3-code notranslate pyth
floor()</code> function returns floats, unlike the <code 
frompyfunc()</code> function along with inbuilt function <code
log()</code> function to perform log at the base e.</p>
log10()</code> function to perform log at the base 10.</p
log2()</code> function to perform log at the base 2.</p>
math.log()</code> with two input parameters and one output p
cumsum()</code> function.</p>
 
 <div class="w3-example">
cumprod()</code> function.</p>
 
 <div class="w3-example">
prod()</code> function.</p>
 
 <div class="w3-example">
diff()</code> function.</p>
 
 <div class="w3-example">
lcm()</code> function, on each element, and reduce the 
reduce()</code> method.</p>
 
 <div class="w3-panel w3-not
reduce()</code> method will use the ufunc, in this case th
gcd()</code> function, on each element, and reduce the 
reduce()</code> method.</p>
 
 <div class="w3-panel w3-not
reduce()</code> method will use the ufunc, in this case th
arccos()</code> and <code class="w3-codespan">arctan()</co
arcsin()</code>, <code class="w3-codespan">arccos()</code>
arctan()</code> that produce radian values for correspondi
cos()</code> and <code class="w3-codespan">tan()</code>
hypot()</code> function that takes the base and perpendic
sin()</code>, <code class="w3-codespan">cos()</code> an
arccosh()</code> and <code class="w3-codespan">arctanh()</c
arcsinh()</code>, <code class="w3-codespan">arccosh()</code
arctanh()</code> that produce radian values for correspondi
cosh()</code> and <code class="w3-codespan">tanh()</code
sinh()</code>, <code class="w3-codespan">cosh()</code> a
intersect1d()</code> method.</p>
 
 <div class="w3-example">
 <
intersect1d()</code> method takes an optional argument <code cl
setdiff1d()</code> method.</p>
 
 <div class="w3-example">
 <
setdiff1d()</code> method takes an optional argument <code cl
setxor1d()</code> method.</p>
 
 <div class="w3-example">
 <
setxor1d()</code> method takes an optional argument <code cl
head()</code> method.</p>
 
 <p>The <code class="w3-code
head()</code> method returns the headers and 
 a specifi
head()</code> method 
 will return 
 the top 5 rows.</p>
info()</code>, that 
 gives you more information about 
info()</code> method also tells us how many Non-Null val
dropna()</code> method returns 
 a <em>new</em> DataFrame,
fillna()</code> method allows us to replace empty 
 cells 
mean()</code> 
 <code class="w3-codespan">median()</code
median()</code> and <code class="w3-codespan">mode()</code
mode()</code> methods to 
 calculate the respective valu
dropna()</code> method.</p>
 <div class="w3-example">
 <h3
drop_duplicates()</code> method.</p>
 
 <div class="w3-example">
 <
duplicated()</code> method.</p>
 
 <p>The <code class="w3-code
duplicated()</code> method returns a Boolean values for each r
corr()</code> method.</p>
 
 <p>The <code class="w3-code
corr()</code> method calculates the relationship between
corr()</code> method ignores &quot;not numeric&quot; 
 c
corr()</code> method is a table with a lot of numbers th
plot()</code> method to create 
 diagrams.</p>
 <p>Pytho
plot()</code> function is used to draw points (markers) 
plot()</code> function draws a line from point to point.
plt.plot()</code> functions:</p>
 
 <div class="w3-example">
plt.plot()</code> function for each line:</p>
 <div class="w
plt.plot()</code> function.</p>
 
 <p>(In the examples above
grid()</code> function to add grid lines to the plot.</p
grid()</code> function to specify which grid lines 
 to 
subplots()</code> function you can draw multiple plots in on
subplots()</code> function takes three arguments that descri
plt.colorbar()</code> statement:</p>
 
 <div class="w3-example">
scatter()</code> function 
 to draw a scatter plot.</p>
 <p
scatter()</code> function plots one dot for 
 each observat
bar()</code> function 
 to draw bar graphs:</p>
 
 <div
bar()</code> function takes arguments that describes th
bar()</code> and <code class="w3-codespan">barh()</code
bar()</code> takes the keyword argument
 <code class="w
barh()</code> function:</p>
 
 <div class="w3-example">
barh()</code> takes the keyword argument
 <code class="w
barh()</code> takes the keyword argument
 <code class="w
hist()</code> function to 
 create histograms.</p>
 <p>T
hist()</code> function will use an array of 
 numbers to
hist()</code> function will read the array and produce a
legend()</code> function:</p>
 
 <div class="w3-example">
pie()</code> function 
 to draw pie charts:</p>
 
 <div
dir()</code>
 function.</p>
 
 
 <div class="w3-example
minimize()</code> function takes the following arguments:</p
scipy.optimize.minimize()</code> function to minimize the function.</p>
 
 
count_nonzero()</code> method:</p>
 
 <div class="w3-example">
 <
eliminate_zeros()</code> method:</p>
 
 <div class="w3-example">
 <
scipy.sparse.csr_matrix()</code>.</p>
 
 <div class="w3-example">
 <h3>Exam
sum_duplicates()</code> method:</p>
 
 <div class="w3-example">
 <
bellman_ford()</code> method can also find the shortest path bet
breadth_first_order()</code> method returns a breadth first traversal f
connected_components()</code> method.
 
 <div class="w3-example">
 <h3>E
depth_first_order()</code> method returns a depth first traversal fro
floyd_warshall()</code> method to find shortest path between all p
ConvexHull()</code> method to create a Convex Hull.</p>
 
 <di
Delaunay()</code> Triangulation.</p>
 
 <div class="w3-examp
KDTree()</code> method returns a KDTree object.</p>
 
 <p>
query()</code> method returns the distance to the nearest
loadmat()</code> function allows us to import data from a 
savemat()</code> function allows us to export data in 
 Mat
interp1d()</code> is used to interpolate a distribution with
interp_func()</code> with values higher than 10, or less than 0
Rbf()</code> function also takes <code class="w3-codesp
describe()</code> function.</p>
 
 <p>It returns the followi
normaltest()</code> function returns p value for the null hypo
mean()</code> method to find the 
 average speed:</p>
 <
median()</code> method to find the 
 middle value:</p>
 <d
mode()</code> method to find the 
 number that appears t
std()</code> method to find the 
 standard deviation:</
std()</code> method to find the standard deviation:</p>
percentile()</code> method to find 
 the percentiles:</p>
 <di
numpy.random.normal()</code> 
 method, with 100000 values,&nbsp; to dra
scatter()</code> method to draw a scatter 
 plot diagram:</
myfunc()</code> function 
 from the example above:</p>
 
 
fit()</code> that takes 
 the independent and dependent
LinearRegression()</code> method 
 to create a linear regression obj
StandardScaler()</code>
 which returns a Scaler object with method
r2_score()</code> 
 that will help us find this relationship
map()</code> method that takes a dictionary with inform
executemany()</code> method 
 is a list of tuples, containing t
mydb.commit()</code>. It is required to make the 
 changes, oth
fetchall()</code> 
 method, which fetches all rows from the 
fetchone()</code> method.</p>
 <p>The <code class="w3-codesp
fetchone()</code> method will return the first row of 
 the 
mydb.commit()</code>. It is required to make the 
 changes, oth
mydb.commit()</code>. It is required to make the 
 changes, oth
insert_many()</code> method.</p>
 <p>The first parameter of the
insert_many()</code> method 
 is a list containing dictionaries
insert_many()</code> method returns a InsertManyResult object, 
insert_one()</code> method.</p>
 
 <p>The first parameter of t
insert_one()</code> method is a 
 dictionary containing the 
 
insert_one()</code> method returns a InsertOneResult object, w
find()</code> method.</p>
 <p>The <code class="w3-codesp
find()</code> method returns all 
 occurrences in the se
find()</code> method 
 is a query object. In this exampl
find()</code> method 
 is an object describing which fie
find_one()</code> method.</p>
 <p>The <code class="w3-codesp
find_one()</code> method returns the first 
 occurrence in t
find()</code> method 
 is a query object, and is used to
sort()</code> method to sort the result in 
 ascending o
sort()</code> method takes one parameter for 
 &quot;fie
delete_many()</code> method.</p>
 <p>The first parameter of the
delete_many()</code> method 
 is a query object defining which 
delete_many()</code> method:</p>
 
 <div class="w3-example">
 <
delete_one()</code> method.</p>
 <p>The first parameter of the
delete_one()</code> method 
 is a query object defining which 
drop()</code> method.</p>
 <div class="w3-example">
 <h3
drop()</code> method returns true if the collection was 
limit()</code> 
 method.</p>
 <p>The <code class="w3-code
limit()</code> method takes one parameter, a number defin
__init__()</code> function is called automatically every tim
__complex__()</code> or <code class="w3-codespan">__float__()</
__float__()</code> method.</p>
 <p>The methods in this module
